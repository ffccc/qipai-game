#ifndef CMD_LLK_HEAD_FILE
#define CMD_LLK_HEAD_FILE

//公共宏定义-----------------------------------------------------------------------
#define KIND_ID							400									//游戏 I D
#define GAME_PLAYER						4									//游戏人数
#define GAME_NAME						TEXT("连连看")						//游戏名字
#define GAME_GENRE						GAME_GENRE_SCORE    	            //游戏类型

//版本
#define		MAXCLIENTVER			MAKELONG(1,4)
#define		BLASTFRAMECOUNT				46

//棋盘格数量
#define 	CHESSCOUNT_W				19
#define		CHESSCOUNT_H				11

//棋子的尺寸
#define		CHESSWIDTH					42
#define		CHESSHEIGHT					47

#define		CHESSWIDTH_S				10
#define		CHESSHEIGHT_S				11

//棋盘的边框
#define		CHESSFRAME_W_S				150+6
#define		CHESSFRAME_H_S				20
#define		CHESSFRAME_W				0
#define		CHESSFRAME_H				190

//错误的棋盘位置或者棋子类型
#define		ERROR_ALL					254

#define		MAX_CHESS_VALUE				25

//道具相关宏
#define		PROP_MAX_CNT				3
#define		PROP_MIN_VALUE				50
//51代表重列，50指南针,52炸弹,53为禁手，54为障碍
#define		PROP_GUIDE					0
#define		PROP_RESET					1
#define		PROP_BOM					2
//#define		PROP_STOPIT					3
//#define		PROP_CLOG					4

//失败原因
#define		PLAYER_ESCAPE				1
#define		PLAYER_OVERTIME				2

#define		GS_PLAYING_LOSE				101								//游戏状态
//-----------------------------------------------------------------------------------

//地图
const bool LLK_MAP[50][CHESSCOUNT_H][CHESSCOUNT_W] = {
	{
		//麻花  0
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,
		0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,1,0,
		0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,
		0,0,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,
		0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,
		0,0,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,
		0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,
		0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,1,0,1,0,
		0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},

    // 四个方，中间菱形-〉1
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,
		0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,
		0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,0,
		0,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,
		0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,
		0,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,
		0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,0,
		0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,
		0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	// 中CN ->2
	{	
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,
		0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,
		0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,
		0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,
		0,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,
		0,0,0,1,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,
		0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,
		0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,
		0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	// 回环 ->3
	{	
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,
		0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
		0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,
		0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
		0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,
		0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	// 菱形 ->4
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,0,
		0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,0,
		0,1,1,1,0,0,0,1,1,0,1,1,0,0,0,1,1,1,0,
		0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,
		0,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,0,
		0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,
		0,1,1,1,0,0,0,1,1,0,1,1,0,0,0,1,1,1,0,
		0,1,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,1,0,
		0,1,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	// 方块 1 有孔 ->5
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//6
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,0,
		0,1,1,1,0,1,1,1,0,0,0,1,1,1,0,1,1,1,0,
		0,1,1,0,1,1,1,0,0,1,0,0,1,1,1,0,1,1,0,
		0,1,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,0,
		0,0,1,1,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,
		0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,0,
		0,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,
		0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,
		0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//7
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,
		0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,
		0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//8
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,
		0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,
		0,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,
		0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,
		0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,
		0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
		0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//9
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,
		0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,
		0,0,0,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,
		0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,
		0,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,
		0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,
		0,0,0,1,1,1,1,0,1,0,1,0,1,1,1,1,0,0,0,
		0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,0,
		0,1,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//10
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
		0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,
		0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,
		0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,
		0,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,0,
		0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
		0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
		0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//11
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,
		0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,1,0,
		0,0,1,0,1,0,1,0,0,1,1,0,1,1,0,0,1,1,0,
		0,1,0,1,0,1,0,1,0,0,1,1,1,0,0,1,1,1,0,
		0,0,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,1,0,
		0,0,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,1,0,
		0,0,0,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//12
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,
		0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,
		0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,
		0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,
		0,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,
		0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//13
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,
		0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,
		0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,0,1,1,0,
		0,1,0,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,0,
		0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,
		0,1,0,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,0,
		0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,0,1,1,0,
		0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,
		0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//14
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,
		0,0,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,0,
		0,1,0,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,
		0,1,0,1,0,0,0,0,0,1,0,0,1,0,1,1,1,1,0,
		0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,
		0,0,0,1,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,
		0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,0,1,0,
		0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,0,
		0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//15
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,
		0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,
		0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,
		0,0,0,1,1,1,0,0,0,1,0,1,1,0,0,0,0,1,0,
		0,0,0,0,1,0,0,0,0,1,0,1,1,0,1,1,0,1,0,
		0,0,0,0,1,0,1,0,0,1,0,0,0,0,1,1,0,1,0,
		0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,1,0,
		0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//16
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
		0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,
		0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,
		0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,
		0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

	},
	//17
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,
		0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,
		0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,
		0,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,
		0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,
		0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,
		0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
		0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,
		0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	},
	//18
	{
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,
		0,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,1,0,
		0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,0,1,1,0,
		0,1,1,0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0,
		0,1,1,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,0,
		0,1,1,0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0,
		0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,0,1,1,0,
		0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,0,1,1,0,
		0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	}
};

//-----------------------------------------------------------------------------------------
/////////////////////////////////////////////////////////////////////////
//命令码定义
//Client
#define		SUB_C_GROUP					10
#define		SUB_C_TIMER					11		//定时器

#define		SUB_C_LINK					50		//连接
#define		SUB_C_GUIDE					51		//指南针
#define		SUB_C_BOMB					52		//炸弹
#define		SUB_C_REALIGN				53		//重列
#define		SUB_C_STOPIT				54		//禁手
#define		SUB_C_CLOG					55		//障碍



//Server
#define		SUB_S_GAME_START			100		//游戏开始
#define		SUB_S_GAME_OVER				101		//游戏结束

#define		SUB_S_GROUP					110		//组队
#define		SUB_S_LOST					111		//时间到或强退

#define		SUB_S_LINK					150		//连接
#define		SUB_S_GUIDE					151		//指南针
#define		SUB_S_BOMB					152		//炸弹
#define		SUB_S_REALIGN				153		//重列
#define		SUB_S_STOPIT				154		//禁手
#define		SUB_S_CLOG					155		//障碍



//连接类型
#define		LK_ERROR_LINK				0		//错误连接
#define		LK_SERIES_NO				1		//非连击
#define		LK_SERIES_LINK				2		//连击

//定时器时间
#define		LINKALLTIME					30

//鼠标状态（仅客户端用）
#define		MOUSE_NORMAL				1		//正常点击状态
#define		MOUSE_STOPIT				2		//禁手道具状态
#define		MOUSE_CLOG					3		//障碍道具状态


//////////////////////////////////////////////////////////////////////////
//消息结构体
//场景
struct		CMD_S_GameState
{
	BYTE			map[GAME_PLAYER][CHESSCOUNT_H][CHESSCOUNT_W];    
	BYTE			bPlayState[GAME_PLAYER];			//用户状态
	BYTE			bPropCnt[PROP_MAX_CNT];				//道具个数
	int				nLeaveTime;							//定时器剩下时间
};
//游戏开始
struct		CMD_S_GameStart
{
	BYTE			bChess[CHESSCOUNT_H][CHESSCOUNT_W];	//棋盘数据，四个玩家都一样
	BYTE			bPlayState[GAME_PLAYER];			//用户状态
	BYTE			bPropCnt[PROP_MAX_CNT];				//道具个数
};
//游戏结束
struct		CMD_S_GameOver
{
	BYTE			bOrder[GAME_PLAYER];				//名次
	int				nScores[GAME_PLAYER];
};


//组队信息
struct		CMD_C_Group
{
	BYTE			nGroupID;							//组队ID
};
//组队信息
struct		CMD_S_Group
{
	BYTE			nCurrentPlayer;
	BYTE			nGroupID[GAME_PLAYER];				//组队ID
};
//定时器消息
struct		CMD_C_Timer
{
	BYTE			nTime;								//定时器时间
};

struct		CMD_S_Lost
{
	WORD			wSeat;								//座位
};
//连接消息
struct		CMD_C_Link
{
	BYTE			bLinkKind;								//连接类型
	LONG			nFirst_X;								//横向格子位置
	LONG			nFirst_Y;								//纵向格子位置
	LONG			nEnd_X;									//横向格子位置
	LONG			nEnd_Y;									//纵向格子位置
};
//连接消息
struct		CMD_S_Link
{
	WORD			nCurrentPlayer;						
	LONG			nFirst_X;							//横向格子位置
	LONG			nFirst_Y;							//纵向格子位置
	LONG			nEnd_X;								//横向格子位置
	LONG			nEnd_Y;								//纵向格子位置
	BYTE			nPropType;							//道具类型
	BYTE			nPropCount;							//道具个数
};
//重列
struct		CMD_C_Realign
{
	BYTE			nChess[CHESSCOUNT_H][CHESSCOUNT_W]; 
};
//重列
struct		CMD_S_Realign
{
	WORD			nCurrentPlayer;	
	BYTE			nChess[CHESSCOUNT_H][CHESSCOUNT_W]; 
	BYTE			nPropCount;							//道具个数
};

//禁手
struct		CMD_C_StopIt
{
	BYTE			nDesUserId; 
};
//禁手
struct		CMD_S_StopIt
{
	BYTE			nSrcUserId;	
	BYTE			nDesUserId; 
	BYTE			nPropCount;							//道具个数
};

//障碍
struct		CMD_C_Clog
{
	BYTE			nDesUserId; 
};

//障碍
struct		CMD_S_Clog
{
	BYTE			nSrcUserId;	
	BYTE			nDesUserId; 
	BYTE			nChessPosX[12];		//棋子X位置
	BYTE			nChessPosY[12];		//棋子Y位置
	BYTE			nChessFace[12];		//棋子颜色
	BYTE			nPropCount;							//道具个数
};


#endif